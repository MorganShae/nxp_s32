name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Add Boost submodule
        run: |
          git submodule add https://github.com/boostorg/boost.git external/boost
          git submodule update --init --recursive

      - name: Install Windows Tools
        if: runner.os == 'Windows'
        run: |
          choco install boost-msvc-14.1
          choco install microsoft-visual-cpp-build-tools

      - name: Install Boost on Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libboost-all-dev

      # - name: Check GH_PAT
      # run: echo ${{ secrets.GH_PAT }}

      #- name: Commit submodule changes
      #  run: |
      #    git config --local user.email "action@github.com"
      #    git config --local user.name "GitHub Action"
      #    git add external/boost
      #    git commit -m "Add Boost as a submodule"
      #    git push origin main
      #  env:
      #    GH_PAT: ${{ secrets.GH_PAT }}

      - name: Configure and Build with CMake
        run: |
          cmake -S . -DCMAKE_BUILD_TYPE=Debug -B build
          cmake --build build --parallel 16

      - name: Run Tests
        run: |
          ctest --test-dir build -C Debug --parallel 16 --output-junit test_results.xml --timeout 60 --output-on-failure

      - name: Export Results to XML
        run: |
          mv build/debug/Testing/$(head -n 1 Testing/TAG)/Test.xml test_results.xml

      - name: Install Python Dependencies and Run pytest
        if: matrix.os == 'ubuntu-latest'
        run: |
          pytest test

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: build/test_results.xml
