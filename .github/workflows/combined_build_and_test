name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Set up Python 3.10
         uses: actions/setup-python@v3
         with:
           python-version: "3.10"
    
      - name: Install dependencies
         run: |
           python -m pip install --upgrade pip
           pip install pytest

      - name: Set up Boost
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            # Windows Boost setup commands
            choco install boost-vc142
          else
            # Ubuntu Boost setup commands
            sudo apt-get install -y libboost-all-dev
          fi

        - name: Add Boost submodule
        run: |
          git submodule add https://github.com/boostorg/boost.git external/boost
          git submodule update --init --recursive

      - name: Commit submodule changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add external/boost
          git commit -m "Add Boost as a submodule"
          git push

      - name: Configure and Build with CMake
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Export Results to XML
        run: |
          cd build
          ctest --output-on-failure -T Test
          mv Testing/$(head -n 1 Testing/TAG)/Test.xml test_results.xml

      - name: Install Python Dependencies and Run pytest
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd path/to/your/python/tests
          pip install -r requirements.txt  # Install dependencies if any
          pytest

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: build/test_results.xml

      - name: Run pytest
        run: | 
           pytest -v
